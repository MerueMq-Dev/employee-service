services:
  postgres:
    image: postgres:17-alpine
    container_name: employeemanager-postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: employee_password
      POSTGRES_DB: employee_manager
    ports:
      - "5432:5432"
    volumes:
      - employeemanager_pgdata:/var/lib/postgresql/data
    healthcheck:
      interval: 10s
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      retries: 10
      start_period: 30s
      timeout: 5s
    networks:
      - app-network

  pgadmin:
    image: dpage/pgadmin4:7
    container_name: employeemanager-pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network

  employeemanager-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: employeemanager-api
    restart: always
    environment:      
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings__DefaultConnection: "Host=postgres;Port=5432;Database=employee_manager;Username=postgres;Password=employee_password;Timeout=30;Command Timeout=30"
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network

volumes:
  employeemanager_pgdata:
  pgadmin_data:

networks:
  app-network:
    driver: bridge